<?php

/**
 * @file
 * File description.
 *
 * Long description.
 */

use Drupal\views\Entity\View;
use Drupal\Core\File\FileSystemInterface;
use Drupal\file\Entity\File;
use Drupal\media\Entity\Media;

/**
 * Implements hook_install().
 */
function stanford_person_install() {
  // Services.
  $file_system = \Drupal::service('file_system');
  $module_handler = \Drupal::service('module_handler');
  $logger = \Drupal::logger('stanford_person');

  // Disable the core taxonomy_term view if it is enabled.
  $core_taxonomy_view = View::load('taxonomy_term');
  if ($core_taxonomy_view) {
    $core_taxonomy_view->disable()->save();
  }

  // Save the file to public.
  $destination = 'public://media/image';
  $source = $file_system->realpath(
    drupal_get_path("module", "stanford_person") .
    "/lib/assets/img/stanford-person-default-profile-image.png"
  );
  $file_system->prepareDirectory($destination, FileSystemInterface::CREATE_DIRECTORY);
  $saved = $file_system->copy($source, $destination, FileSystemInterface::EXISTS_REPLACE);

  // We don't force the default content module to be enabled on install so we
  // should check here if it exists or not so that it can do it's thing.
  if (!$module_handler->moduleExists('default_content')) {
    try {
      // Save the file/media entities and ensure their UUIDs.
      // Create file entity.
      $image = File::create();
      $image->setFileUri($saved);
      $image->set('uuid', '4d5dde7e-f2c7-4d27-8ad1-99623b1308f8');
      $image->setOwnerId(\Drupal::currentUser()->id());
      $image->setMimeType('image/' . pathinfo($saved, PATHINFO_EXTENSION));
      $image->setFileName($file_system->basename($saved));
      $image->setPermanent();
      $image->save();

      // Create media entity with saved file.
      $image_media = Media::create([
        'bundle' => 'image',
        'uuid' => 'a4660e7f-d4bf-4a28-8030-9dc8576b1c9a',
        'uid' => \Drupal::currentUser()->id(),
        'langcode' => \Drupal::languageManager()->getDefaultLanguage()->getId(),
        'field_media_image' => [
          'target_id' => $image->id(),
          'alt' => t('Placeholder image'),
          'title' => t('Placeholder image'),
        ],
      ]);
      $image_media->save();
    }
    catch (\Exception $e) {
      // Likely the UUID already exists and it is an integrity constraint
      // violation we can ignore.
      $logger->warning($e->getMessage());
    }
  }
}
